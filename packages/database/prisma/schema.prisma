generator client {
  provider = "prisma-client-js"
  output   = "../generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id @default(cuid())
  email String @unique

  applications Application[]
  connections  Connection[]

  createdAt DateTime @default(now()) @map("created_at")

  @@map("users")
}

enum ConnectionProvider {
  Github
  Discord
}

model Connection {
  id                String             @id @default(cuid())
  userId            String             @map("user_id")
  provider          ConnectionProvider
  providerAccountId String             @map("provider_account_id")
  scope             String?

  accessToken  String  @map("access_token")
  refreshToken String? @map("refresh_token")

  expiresAt DateTime? @map("expires_at")

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
  @@map("connections")
}

enum ApplicationImage {
  Node
}

model Application {
  id      String @id @default(cuid())
  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String @map("owner_id")

  image      ApplicationImage
  name       String
  slug       String           @unique
  repository String

  ram Int
  cpu Float

  createdAt DateTime @default(now()) @map("created_at")
  deploys   Deploy[]

  @@map("applications")
}

enum DeployStatus {
  PENDING
  RUNNING
  SUCCESS
  FAILED
}

model Deploy {
  id            String      @id @default(cuid())
  application   Application @relation(fields: [applicationId], references: [id])
  applicationId String      @map("application_id")
  containedId   String?     @map("container_id")

  status DeployStatus @default(PENDING)
  logs   String?
  port   Int?

  commitHash String? @map("commit_hash")
  branch     String?

  createdAt  DateTime  @default(now()) @map("created_at")
  startedAt  DateTime? @map("started_at")
  finishedAt DateTime? @map("finished_at")

  @@map("deploys")
}
